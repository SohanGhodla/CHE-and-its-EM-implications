#!/usr/bin/env python
import numpy as np
import os

# Dutch factor is set as a variable depending on Z_initial of the star (Vink et al. 2005)

mass = np.arange(15,300,5.)
Min_omega = [[0.53, 0.52, 0.51, 0.5 , 0.49, 0.48, 0.47, 0.47, 0.46, 0.45, 0.44,
       0.44, 0.43, 0.43, 0.42, 0.42, 0.41, 0.41, 0.4 , 0.4 , 0.4 , 0.39,
       0.39, 0.39, 0.39, 0.39, 0.39, 0.39, 0.39, 0.39, 0.39, 0.39, 0.39,
       0.4 , 0.4 , 0.4 , 0.41, 0.41, 0.42, 0.42, 0.43, 0.43, 0.44, 0.44,
       0.45, 0.46, 0.47, 0.48, 0.48, 0.49, 0.5 , 0.51, 0.52, 0.53, 0.55,
       0.56, 0.57, 0.58], [0.54, 0.52, 0.51, 0.5 , 0.49, 0.49, 0.48, 0.47, 0.46, 0.45, 0.45,
       0.44, 0.43, 0.43, 0.42, 0.42, 0.41, 0.41, 0.41, 0.4 , 0.4 , 0.4 ,
       0.4 , 0.4 , 0.4 , 0.4 , 0.4 , 0.4 , 0.4 , 0.4 , 0.4 , 0.4 , 0.4 ,
       0.41, 0.41, 0.42, 0.42, 0.43, 0.43, 0.44, 0.44, 0.45, 0.46, 0.46,
       0.47, 0.48, 0.49, 0.5 , 0.51, 0.52, 0.53, 0.54, 0.55, 0.56, 0.58,
       0.59, 0.6 , 0.62], [0.54, 0.53, 0.52, 0.51, 0.5 , 0.49, 0.48, 0.47, 0.47, 0.46, 0.45,
       0.45, 0.44, 0.43, 0.43, 0.43, 0.42, 0.42, 0.42, 0.41, 0.41, 0.41,
       0.41, 0.41, 0.41, 0.41, 0.41, 0.41, 0.42, 0.42, 0.42, 0.43, 0.43,
       0.43, 0.44, 0.45, 0.45, 0.46, 0.46, 0.47, 0.48, 0.49, 0.5 , 0.51,
       0.52, 0.53, 0.54, 0.55, 0.56, 0.58, 0.59, 0.6 , 0.62, 0.63, 0.65,
       0.66, 0.68, 0.69], [0.55, 0.54, 0.53, 0.52, 0.51, 0.5 , 0.49, 0.48, 0.48, 0.47, 0.46,
       0.46, 0.45, 0.45, 0.44, 0.44, 0.44, 0.43, 0.43, 0.43, 0.43, 0.43,
       0.43, 0.43, 0.43, 0.44, 0.44, 0.44, 0.45, 0.45, 0.46, 0.46, 0.47,
       0.48, 0.48, 0.49, 0.5 , 0.51, 0.52, 0.53, 0.54, 0.55, 0.57, 0.58,
       0.59, 0.61, 0.62, 0.64, 0.65, 0.67, 0.69, 0.7 , 0.72, 0.74, 0.76,
       0.78, 0.8 , 0.82], [0.57, 0.56, 0.55, 0.54, 0.53, 0.52, 0.51, 0.5 , 0.49, 0.48, 0.48,
       0.47, 0.47, 0.46, 0.46, 0.46, 0.46, 0.46, 0.46, 0.46, 0.46, 0.46,
       0.46, 0.47, 0.47, 0.47, 0.48, 0.49, 0.49, 0.5 , 0.51, 0.52, 0.53,
       0.54, 0.55, 0.56, 0.58, 0.59, 0.61, 0.62, 0.64, 0.65, 0.67, 0.69,
       0.71, 0.73, 0.75, 0.77, 0.79, 0.81, 0.84, 0.86, 0.89, 0.91, 0.94,
       0.97, 0.99, 1.02], [0.65, 0.63, 0.61, 0.6 , 0.58, 0.57, 0.56, 0.55, 0.54, 0.53, 0.53,
       0.52, 0.52, 0.52, 0.52, 0.52, 0.52, 0.52, 0.53, 0.53, 0.54, 0.55,
       0.55, 0.56, 0.58, 0.59, 0.6 , 0.62, 0.64, 0.65, 0.67, 0.69, 0.72,
       0.74, 0.76, 0.79, 0.82, 0.84, 0.87, 0.9 , 0.94, 0.97, 1.  , 1.04,
       1.08, 1.12, 1.16, 1.2 , 1.24, 1.28, 1.33, 1.37, 1.42, 1.47, 1.52,
       1.57, 1.62, 1.68], [0.73, 0.71, 0.69, 0.67, 0.65, 0.64, 0.62, 0.61, 0.6 , 0.6 , 0.59,
       0.59, 0.59, 0.59, 0.59, 0.59, 0.6 , 0.61, 0.62, 0.63, 0.64, 0.66,
       0.68, 0.7 , 0.72, 0.74, 0.76, 0.79, 0.82, 0.85, 0.88, 0.92, 0.95,
       0.99, 1.03, 1.07, 1.12, 1.16, 1.21, 1.26, 1.31, 1.37, 1.42, 1.48,
       1.54, 1.6 , 1.66, 1.72, 1.79, 1.86, 1.93, 2.  , 2.08, 2.15, 2.23,
       2.31, 2.39, 2.47], [0.78, 0.76, 0.74, 0.73, 0.71, 0.7 , 0.69, 0.68, 0.68, 0.68, 0.68,
       0.68, 0.68, 0.69, 0.69, 0.7 , 0.72, 0.73, 0.75, 0.77, 0.79, 0.81,
       0.84, 0.86, 0.89, 0.93, 0.96, 1.  , 1.03, 1.07, 1.12, 1.16, 1.21,
       1.26, 1.31, 1.36, 1.42, 1.48, 1.54, 1.6 , 1.67, 1.73, 1.8 , 1.87,
       1.95, 2.02, 2.1 , 2.18, 2.26, 2.34, 2.43, 2.52, 2.61, 2.7 , 2.8 ,
       2.9 , 3.  , 3.1 ], [0.76, 0.75, 0.74, 0.73, 0.73, 0.72, 0.72, 0.72, 0.72, 0.73, 0.73,
       0.74, 0.75, 0.76, 0.77, 0.79, 0.8 , 0.82, 0.84, 0.86, 0.88, 0.91,
       0.94, 0.97, 1.  , 1.03, 1.06, 1.1 , 1.14, 1.17, 1.22, 1.26, 1.3 ,
       1.35, 1.4 , 1.45, 1.5 , 1.55, 1.61, 1.67, 1.72, 1.78, 1.85, 1.91,
       1.98, 2.05, 2.11, 2.19, 2.26, 2.33, 2.41, 2.49, 2.57, 2.65, 2.73,
       2.82, 2.91, 3.  ]]

z = ['zem5', 'zem4', '6zem4', '3zem4', 'z001', 'z002', 'z003', 'z004', 'z005']#, 'z006']
Z = [0.00001, 0.0001, 0.0006, 0.0003, 0.001, 0.002, 0.003, 0.004, 0.005]#, 0.006]

# z = ['z004', 'z005']    
# Z = [0.004, 0.005]
count_symbolic = -1
for i in range(len(Z)):
  zDirname = z[i]
  for m, rot in zip(mass, Min_omega[i]):
     if m <= 300.0 and rot < 0.97:
      # rot = rot  # just to be safe
      os.system('mkdir -p ../Makemodels/' + zDirname)
    
      count_symbolic += 1
      metal = Z[i]
      Dutch_factor = np.sqrt(metal/0.02)
      
      # dirname = str(z[i]) + '-' + str(m)
      #m = 0.75 * m
      #****************************************************WRITE DATA*************************************************
      print('Z = ' + z[i] + ', mass = '  + str(m) + ', Symlink = ' + str(count_symbolic) + '\n')
      # Datafile.write('Z = ' + str(z[i]) + ', mass = '  + str(m) +  ', Omega = ' + str(rot) + ', Symlink = ' +  str(count_symbolic) + '\n')

      if os.path.isdir('../Makemodels_MS/' + str(zDirname) + '/' + str(m)):
          continue
      else:
        os.system('cp -r ../XX-clean_script/ ../Makemodels/' + str(zDirname)+ '/' + str(m))# + '/' + str(z[i]) + '/' + str(dirname))
        INLIST = open('../XX-clean_script/inlist_var_input', 'r')
        TFILE = open('../Makemodels/' + str(zDirname) + '/' + str(m) + '/inlist_var_input', 'w')
        datalines = INLIST.read()
        for line in datalines.split('\n'):
          check = 0

          if 'saved_model_name' in line:
            TFILE.write('\tsaved_model_name = \'zams_' + str(m) + 'Msun.mod\'' + '\n')
            check = 1

          if 'new_omega_div_omega_crit' in line:
            TFILE.write('\tnew_omega_div_omega_crit = ' + str(np.round(rot+ 0.03,2)) + '\n')
            check = 1
          if 'initial_mass =' in line:
            TFILE.write('\tinitial_mass = ' + str(m) + '\n')
            check = 1
          if 'initial_z =' in line:
            TFILE.write('\tinitial_z = ' + str(metal) + '\n')
            check = 1
          if 'Dutch_scaling_factor =' in line:
            TFILE.write('\tDutch_scaling_factor = ' + str(np.round(Dutch_factor,2)) + '\n')
            check = 1
        
          # if 'new_Y =' in line:
          #   TFILE.write('\tnew_Y = ' + str(0.24 +  2*metal) + '\n') 
          #   check = 1

          # if 'new_Z =' in line:
          #   TFILE.write('\tnew_Z = ' + str(metal) + '\n')
          #   check = 1
          
          if 'Zbase =' in line:
            TFILE.write('\tZbase = ' + str(metal) + '\n')
            check = 1
          
          if check < 0.5:
            TFILE.write(line + '\n')
        INLIST.close()
        TFILE.close()
    
        os.system('cp -r ./Saved_ZAMS_models/' + z[i]  + '/zams_' + str(m) + 'Msun.mod ../Makemodels/' + str(zDirname)+ '/' + str(m))

      os.system('ln -s ../Makemodels/' + str(zDirname) + '/' + str(m) + ' ' + str(count_symbolic))

